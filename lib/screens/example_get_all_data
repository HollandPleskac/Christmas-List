
// The old view_family_screen.dart

import 'package:flutter/material.dart';
import 'package:pleskac_christmas_list/app_config.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:pleskac_christmas_list/widgets/family_member.dart';

class ViewFamilyScreen extends StatefulWidget {
  static const routeName = 'view-family-screen';
  @override
  _ViewFamilyScreenState createState() => _ViewFamilyScreenState();
}

class _ViewFamilyScreenState extends State<ViewFamilyScreen> {
  static var _appConfigInstance = AppConfig();
  @override
  Widget build(BuildContext context) {
    final GlobalKey<ScaffoldState> _scaffoldKey = GlobalKey<ScaffoldState>();
    return Scaffold(
      key: _scaffoldKey,
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 5,
        leading: IconButton(
          icon: Icon(
            Icons.menu,
            color: Colors.red,
          ),
          onPressed: () => _scaffoldKey.currentState.openDrawer(),
        ),
        title: Center(
          child: Text(
            'View Family',
            style: TextStyle(color: Colors.green),
          ),
        ),
      ),
      body: StreamBuilder(
        stream: Firestore.instance.collection("PleskacFam").snapshots(),
        builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {
          if (snapshot.hasError) return Text('Error: ${snapshot.error}');
          switch (snapshot.connectionState) {
            case ConnectionState.waiting:
              return Text('Loading...');
            default:
              return Column(
                children:
                    snapshot.data.documents.map((DocumentSnapshot document) {
                  print(document.documentID);
                  return StreamBuilder(
                    stream: Firestore.instance
                        .collection("PleskacFam")
                        .document(document.documentID)
                        .collection('Members')
                        .snapshots(),
                    builder: (BuildContext context,
                        AsyncSnapshot<QuerySnapshot> snapshot) {
                      if (snapshot.hasError)
                        return Text('Error: ${snapshot.error}');
                      switch (snapshot.connectionState) {
                        case ConnectionState.waiting:
                          return Text('Loading...');
                        default:
                          return Column(
                            children: snapshot.data.documents
                                .map((DocumentSnapshot document) {
                              print(document.documentID);
                              return FamilyMember(
                                  true,
                                  document['uid'],
                                  document.documentID,
                                  document['age'],
                                  document['rank']);
                            }).toList(),
                          );
                      }
                    },
                  );
                }).toList(),
              );
          }
        },
      ),
      drawer: _appConfigInstance.appDrawer(context),
    );
  }
}
